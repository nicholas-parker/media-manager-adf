{"version":3,"file":"./bundles/ng2-alfresco-webscript.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f28d49e7d357c84da1bc","webpack:///./src/webscript.component.ts","webpack:///external \"@angular/core\"","webpack:///external \"ng2-alfresco-core\"","webpack:///external \"ng2-alfresco-datatable\"","webpack:///./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"ng2-alfresco-core\"), require(\"ng2-alfresco-datatable\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"ng2-alfresco-core\", \"ng2-alfresco-datatable\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-alfresco-webscript\"] = factory(require(\"@angular/core\"), require(\"ng2-alfresco-core\"), require(\"ng2-alfresco-datatable\"));\n\telse\n\t\troot[\"ng2-alfresco-webscript\"] = factory(root[\"@angular/core\"], root[\"ng2-alfresco-core\"], root[\"ng2-alfresco-datatable\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f28d49e7d357c84da1bc","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { AlfrescoApiService, LogService } from 'ng2-alfresco-core';\nimport { ObjectDataTableAdapter } from 'ng2-alfresco-datatable';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (onSuccess)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - onSuccess - The event is emitted when the data are recived\n *\n * @returns {WebscriptComponent} .\n */\n@Component({\n    selector: 'adf-webscript-get, alfresco-webscript-get',\n    template: `\n        <div *ngIf=\"showData\">\n            <div *ngIf=\"contentType === 'JSON'\" id=\"webscript-data-JSON\">{{data | json}}</div>\n            <div *ngIf=\"contentType === 'HTML'\" id=\"webscript-data-HTML\" [innerHTML]=\"data\"></div>\n            <div *ngIf=\"contentType === 'TEXT'\" id=\"webscript-data-TEXT\" >{{data}}</div>\n            <div *ngIf=\"isDataTableContent()\"><alfresco-datatable id=\"webscript-datatable-wrapper\" [data]=\"data\"></alfresco-datatable><div>\n            <div *ngIf=\"showError\" id=\"error\">Error during the deserialization of {{data}} as {{contentType}}</div>\n        </div>\n    `\n})\nexport class WebscriptComponent implements OnChanges {\n\n    @Input()\n    scriptPath: string;\n\n    @Input()\n    scriptArgs: any;\n\n    @Input()\n    showData: boolean = true;\n\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    @Input()\n    servicePath: string = 'service';\n\n    @Input()\n    contentType: string = 'TEXT';\n\n    @Output()\n    onSuccess = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.onSuccess.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @retutns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        let datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webscript.component.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-core\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-datatable\"\n// module id = 3\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from 'ng2-alfresco-core';\nimport { DataTableModule } from 'ng2-alfresco-datatable';\n\nimport { WebscriptComponent } from './src/webscript.component';\nexport { WebscriptComponent } from './src/webscript.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        DataTableModule\n    ],\n    declarations: [\n        WebscriptComponent\n    ],\n    exports: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./index.ts"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChEA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AACA;AAmCA;AA0BA;AAAA;AACA;AAlBA;AAGA;AAGA;AAGA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AArFA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AArBA;AAZA;AACA;AACA;AASA;AA2BA;AA1BA;AAyFA;;AAAA;AAzFA;;;;;;;ACtDA;;;;;;ACAA;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;AAeA;;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAcA;AAAA;AAAA;AAAA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;","sourceRoot":""}