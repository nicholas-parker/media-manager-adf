{"version":3,"file":"./bundles/ng2-alfresco-datatable.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e42dcc2bec35c186c964","webpack:///external \"@angular/core\"","webpack:///external \"ng2-alfresco-core\"","webpack:///./src/components/datatable/datatable-cell.component.ts","webpack:///./src/components/datatable/datatable.component.ts","webpack:///./src/data/datatable-adapter.ts","webpack:///./src/components/datatable/empty-list.component.ts","webpack:///./src/components/datatable/data-cell.event.ts","webpack:///./src/components/datatable/data-row-action.event.ts","webpack:///./src/data/object-datatable-adapter.ts","webpack:///./src/components/datatable/date-cell.component.ts","webpack:///./src/components/datatable/filesize-cell.component.ts","webpack:///./src/components/datatable/location-cell.component.ts","webpack:///./src/data/index.ts","webpack:///./src/directives/loading-template.directive.ts","webpack:///./src/directives/no-content-template.directive.ts","webpack:///./src/material.module.ts","webpack:///external \"@angular/router\"","webpack:///./src/components/datatable/datatable.component.html","webpack:///./src/components/datatable/empty-list.component.html","webpack:///./src/components/datatable/datatable.component.scss","webpack:///./src/components/datatable/empty-list.component.scss","webpack:///./src/components/datatable/datatable.component.scss?6cbd","webpack:///./src/components/datatable/empty-list.component.scss?0a91","webpack:///external \"@angular/common\"","webpack:///external \"@angular/material\"","webpack:///external \"rxjs/Rx\"","webpack:///./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"ng2-alfresco-core\"), require(\"@angular/router\"), require(\"@angular/common\"), require(\"@angular/material\"), require(\"rxjs/Rx\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"ng2-alfresco-core\", \"@angular/router\", \"@angular/common\", \"@angular/material\", \"rxjs/Rx\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-alfresco-datatable\"] = factory(require(\"@angular/core\"), require(\"ng2-alfresco-core\"), require(\"@angular/router\"), require(\"@angular/common\"), require(\"@angular/material\"), require(\"rxjs/Rx\"));\n\telse\n\t\troot[\"ng2-alfresco-datatable\"] = factory(root[\"@angular/core\"], root[\"ng2-alfresco-core\"], root[\"@angular/router\"], root[\"@angular/common\"], root[\"@angular/material\"], root[\"rxjs/Rx\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e42dcc2bec35c186c964","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-core\"\n// module id = 1\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataColumn, DataRow, DataTableAdapter } from '../../data/datatable-adapter';\n\n@Component({\n    selector: 'adf-datatable-cell, alfresco-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\" class=\"adf-datatable-cell-value\">{{value}}</span>\n        </ng-container>`,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-cell' }\n})\nexport class DataTableCellComponent implements OnInit {\n\n    @Input()\n    data: DataTableAdapter;\n\n    @Input()\n    column: DataColumn;\n\n    @Input()\n    row: DataRow;\n\n    @Input()\n    value: any;\n\n    @Input()\n    tooltip: string;\n\n    ngOnInit() {\n        if (!this.value && this.column && this.column.key && this.row && this.data) {\n            this.value = this.data.getValue(this.row, this.column);\n\n            if (!this.tooltip) {\n                this.tooltip = this.value;\n            }\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/datatable-cell.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef\n} from '@angular/core';\nimport { MdCheckboxChange } from '@angular/material';\nimport { DataColumnListComponent } from 'ng2-alfresco-core';\nimport { Observable, Observer, Subscription } from 'rxjs/Rx';\nimport { DataColumn, DataRow, DataRowEvent, DataSorting, DataTableAdapter } from '../../data/datatable-adapter';\nimport { ObjectDataRow, ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\n\n@Component({\n    selector: 'adf-datatable, alfresco-datatable',\n    styles: [require('./datatable.component.scss')],\n    template: require('./datatable.component.html')\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    @Input()\n    data: DataTableAdapter;\n\n    @Input()\n    rows: any[] = [];\n\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    @Input()\n    multiselect: boolean = false;\n\n    @Input()\n    actions: boolean = false;\n\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    @Input()\n    fallbackThumbnail: string;\n\n    @Input()\n    contextMenu: boolean = false;\n\n    @Input()\n    allowDropFiles: boolean = false;\n\n    @Input()\n    rowStyle: string;\n\n    @Input()\n    rowStyleClass: string = '';\n\n    @Input()\n    showHeader: boolean = true;\n\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    @Input()\n    loading: boolean = false;\n\n    noContentTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private schema: DataColumn[] = [];\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n\n    constructor(private elementRef: ElementRef, differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>(observer => this.clickObserver = observer).share();\n    }\n\n    ngAfterContentInit() {\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n    }\n\n    ngDoCheck() {\n        let changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map(row => new ObjectDataRow(row));\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        let singleClickStream = this.click$\n            .buffer(this.click$.debounceTime(250))\n            .map(list => list)\n            .filter(x => x.length === 1);\n\n        this.singleClickStreamSub = singleClickStream.subscribe((obj: DataRowEvent[]) => {\n            let event: DataRowEvent = obj[0];\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        let multiClickStream = this.click$\n            .buffer(this.click$.debounceTime(250))\n            .map(list => list)\n            .filter(x => x.length >= 2);\n\n        this.multiClickStreamSub = multiClickStream.subscribe((obj: DataRowEvent[]) => {\n            let event: DataRowEvent = obj[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.schema);\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows) {\n        if (this.data) {\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        if (this.columnList && this.columnList.columns) {\n            this.schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n\n        if (this.data && this.schema && this.schema.length > 0) {\n            this.data.setColumns(this.schema);\n        }\n    }\n\n    onRowClick(row: DataRow, e: MouseEvent) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (row) {\n            if (this.data) {\n                if (this.isSingleSelectionMode()) {\n                    this.resetSelection();\n                    this.selectRow(row, true);\n                    this.emitRowSelectionEvent('row-select', row);\n                }\n\n                if (this.isMultiSelectionMode()) {\n                    const modifier = e && (e.metaKey || e.ctrlKey);\n                    const newValue = modifier ? !row.isSelected : true;\n                    const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                    if (!modifier) {\n                        this.resetSelection();\n                    }\n                    this.selectRow(row, newValue);\n                    this.emitRowSelectionEvent(domEventName, row);\n                }\n            }\n\n            const dataRowEvent = new DataRowEvent(row, e, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach(r => r.isSelected = false);\n            }\n            this.selection.splice(0);\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, e?: Event) {\n        if (e) {\n            e.preventDefault();\n        }\n        let dataRowEvent = new DataRowEvent(row, e, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, e: KeyboardEvent) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, e, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            let current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n        }\n    }\n\n    onSelectAllClick(e: MdCheckboxChange) {\n        this.isSelectAllChecked = e.checked;\n\n        if (this.multiselect) {\n            let rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], e.checked);\n                }\n            }\n\n            const domEventName = e.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MdCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event) {\n        if (event && this.fallbackThumbnail) {\n            let element = <any> event.target;\n            element.src = this.fallbackThumbnail;\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            let value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            let value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '');\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            let sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        let event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            let event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    private selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/datatable.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { BaseUIEvent } from 'ng2-alfresco-core';\n\nexport interface DataTableAdapter {\n    selectedRow: DataRow;\n    getRows(): Array<DataRow>;\n    setRows(rows: Array<DataRow>): void;\n    getColumns(): Array<DataColumn>;\n    setColumns(columns: Array<DataColumn>): void;\n    getValue(row: DataRow, col: DataColumn): any;\n    getSorting(): DataSorting;\n    setSorting(sorting: DataSorting): void;\n    sort(key?: string, direction?: string): void;\n}\n\nexport interface DataRow {\n    isSelected: boolean;\n    isDropTarget?: boolean;\n    cssClass?: string;\n    hasValue(key: string): boolean;\n    getValue(key: string): any;\n}\n\nexport interface DataColumn {\n    key: string;\n    type: string; // text|image|date\n    format?: string;\n    sortable?: boolean;\n    title?: string;\n    srTitle?: string;\n    cssClass?: string;\n    template?: TemplateRef<any>;\n    formatTooltip?: Function;\n}\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/datatable-adapter.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styles: [require('./empty-list.component.scss')],\n    template: require('./empty-list.component.html')\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/empty-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from 'ng2-alfresco-core';\nimport { DataColumn, DataRow } from '../../data/datatable-adapter';\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/data-cell.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from 'ng2-alfresco-core';\nimport { DataRow } from '../../data/datatable-adapter';\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/data-row-action.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatePipe } from '@angular/common';\nimport { TemplateRef } from '@angular/core';\n\nimport { ObjectUtils, TimeAgoPipe } from 'ng2-alfresco-core';\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter } from './datatable-adapter';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n\n    static generateSchema(data: any[]) {\n        let schema = [];\n\n        if (data && data.length) {\n            let rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (let key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map(item => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map(item => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            let sortable = this._columns.filter(c => c.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        let value = row.getValue(col.key);\n\n        if (col.type === 'date') {\n            try {\n                return this.formatDate(col, value);\n            } catch (err) {\n                console.error(`Error parsing date ${value} to format ${col.format}`);\n            }\n        }\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    formatDate(col: DataColumn, value: any): string {\n        if (col.type === 'date') {\n            const format = col.format || 'medium';\n            if (format === 'timeAgo') {\n                const timeAgoPipe = new TimeAgoPipe();\n                return timeAgoPipe.transform(value);\n            } else {\n                const datePipe = new DatePipe('en-US');\n                return datePipe.transform(value, format);\n            }\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n\n    constructor(obj: any) {\n        this.key = obj.key;\n        this.type = obj.type || 'text';\n        this.format = obj.format;\n        this.sortable = obj.sortable;\n        this.title = obj.title;\n        this.srTitle = obj.srTitle;\n        this.cssClass = obj.cssClass;\n        this.template = obj.template;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/object-datatable-adapter.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-date-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\">{{value}}</span>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/date-cell.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span [title]=\"tooltip\">{{ value | adfFileSize }}</span>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/filesize-cell.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { PathInfoEntity } from 'alfresco-js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ displayText }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n\n    @Input()\n    link: any[];\n\n    @Input()\n    displayText: string = '';\n\n    /** @override */\n    ngOnInit() {\n        if (!this.value && this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(this.row, this.column);\n            if (path) {\n                this.value = path;\n                this.displayText = path.name.split('/').pop();\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [ this.column.format, parent.id ];\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/datatable/location-cell.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { DataColumn, DataRow, DataRowEvent, DataSorting, DataTableAdapter } from './datatable-adapter';\nexport { ObjectDataColumn, ObjectDataRow, ObjectDataTableAdapter } from './object-datatable-adapter';\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n@Directive({\n    selector: 'loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/loading-template.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n@Directive({\n    selector: 'no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/no-content-template.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MdButtonModule,\n    MdCheckboxModule,\n    MdIconModule,\n    MdMenuModule,\n    MdTooltipModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MdCheckboxModule,\n        MdMenuModule,\n        MdIconModule,\n        MdButtonModule,\n        MdTooltipModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/material.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_16__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/router\"\n// module id = 16\n// module chunks = 0","module.exports = \"<table\\n    *ngIf=\\\"data\\\"\\n    class=\\\"full-width adf-data-table\\\">\\n\\n    <thead *ngIf=\\\"showHeader\\\">\\n    <tr>\\n        <!-- Actions (left) -->\\n        <th *ngIf=\\\"actions && actionsPosition === 'left'\\\" class=\\\"actions-column\\\">\\n            <span class=\\\"sr-only\\\">Actions</span>\\n        </th>\\n        <!-- Columns -->\\n        <th *ngIf=\\\"multiselect\\\">\\n            <md-checkbox [checked]=\\\"isSelectAllChecked\\\" (change)=\\\"onSelectAllClick($event)\\\"></md-checkbox>\\n        </th>\\n        <th class=\\\"adf-data-table-cell--{{col.type || 'text'}} {{col.cssClass}}\\\"\\n            *ngFor=\\\"let col of data.getColumns()\\\"\\n            [class.sortable]=\\\"col.sortable\\\"\\n            [attr.data-automation-id]=\\\"'auto_id_' + col.key\\\"\\n            [class.adf-data-table__header--sorted-asc]=\\\"isColumnSorted(col, 'asc')\\\"\\n            [class.adf-data-table__header--sorted-desc]=\\\"isColumnSorted(col, 'desc')\\\"\\n            (click)=\\\"onColumnHeaderClick(col)\\\"\\n            (keyup.enter)=\\\"onColumnHeaderClick(col)\\\"\\n            role=\\\"button\\\"\\n            tabindex=\\\"0\\\"\\n            title=\\\"{{ col.title | translate }}\\\">\\n            <span *ngIf=\\\"col.srTitle\\\" class=\\\"sr-only\\\">{{ col.srTitle | translate }}</span>\\n            <span *ngIf=\\\"col.title\\\">{{ col.title | translate}}</span>\\n        </th>\\n        <!-- Actions (right) -->\\n        <th *ngIf=\\\"actions && actionsPosition === 'right'\\\" class=\\\"actions-column\\\">\\n            <span class=\\\"sr-only\\\">Actions</span>\\n        </th>\\n    </tr>\\n    </thead>\\n\\n    <tbody>\\n    <ng-container *ngIf=\\\"!loading\\\">\\n        <tr *ngFor=\\\"let row of data.getRows(); let idx = index\\\"\\n            role=\\\"button\\\"\\n            [class.is-selected]=\\\"row.isSelected\\\"\\n            [adf-upload]=\\\"allowDropFiles && rowAllowsDrop(row)\\\" [adf-upload-data]=\\\"row\\\"\\n            [ngStyle]=\\\"rowStyle\\\"\\n            [ngClass]=\\\"getRowStyle(row)\\\"\\n            (keyup)=\\\"onRowKeyUp(row, $event)\\\">\\n\\n            <!-- Actions (left) -->\\n            <td *ngIf=\\\"actions && actionsPosition === 'left'\\\">\\n                <button md-icon-button [mdMenuTriggerFor]=\\\"menu\\\"\\n                    [attr.data-automation-id]=\\\"'action_menu_' + idx\\\">\\n                    <md-icon>more_vert</md-icon>\\n                </button>\\n                <md-menu #menu=\\\"mdMenu\\\">\\n                    <button md-menu-item *ngFor=\\\"let action of getRowActions(row)\\\"\\n                        [attr.data-automation-id]=\\\"action.title\\\"\\n                        [disabled]=\\\"action.disabled\\\"\\n                        (click)=\\\"onExecuteRowAction(row, action)\\\">\\n                        <md-icon *ngIf=\\\"action.icon\\\">{{ action.icon }}</md-icon>\\n                        <span>{{ action.title }}</span>\\n                    </button>\\n                </md-menu>\\n            </td>\\n\\n            <td *ngIf=\\\"multiselect\\\">\\n                <md-checkbox\\n                    [checked]=\\\"row.isSelected\\\"\\n                    (change)=\\\"onCheckboxChange(row, $event)\\\">\\n                </md-checkbox>\\n            </td>\\n            <td *ngFor=\\\"let col of data.getColumns()\\\"\\n                class=\\\"adf-data-table-cell adf-data-table-cell--{{col.type || 'text'}} {{col.cssClass}}\\\"\\n                tabindex=\\\"0\\\"\\n                (click)=\\\"onRowClick(row, $event)\\\"\\n                [context-menu]=\\\"getContextMenuActions(row, col)\\\"\\n                [context-menu-enabled]=\\\"contextMenu\\\">\\n                <div *ngIf=\\\"!col.template\\\" class=\\\"cell-container\\\">\\n                    <ng-container [ngSwitch]=\\\"col.type\\\">\\n                        <div *ngSwitchCase=\\\"'image'\\\" class=\\\"cell-value\\\">\\n                            <i *ngIf=\\\"isIconValue(row, col)\\\" class=\\\"material-icons\\\">{{ asIconValue(row, col) }}</i>\\n                            <img *ngIf=\\\"!isIconValue(row, col)\\\"\\n                                 alt=\\\"{{ iconAltTextKey(data.getValue(row, col)) | translate }}\\\"\\n                                 src=\\\"{{ data.getValue(row, col) }}\\\"\\n                                 (error)=\\\"onImageLoadingError($event)\\\">\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'icon'\\\" class=\\\"cell-value\\\">\\n                            <img alt=\\\"{{ iconAltTextKey(data.getValue(row, col)) | translate }}\\\"\\n                                 src=\\\"{{ data.getValue(row, col) }}\\\"\\n                                 (error)=\\\"onImageLoadingError($event)\\\">\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'date'\\\" class=\\\"cell-value\\\"\\n                            [attr.data-automation-id]=\\\"'date_' + data.getValue(row, col)\\\">\\n                            <adf-date-cell\\n                                [data]=\\\"data\\\"\\n                                [column]=\\\"col\\\"\\n                                [row]=\\\"row\\\"\\n                                [tooltip]=\\\"getCellTooltip(row, col)\\\">\\n                            </adf-date-cell>\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'location'\\\" class=\\\"cell-value\\\"\\n                            [attr.data-automation-id]=\\\"'location' + data.getValue(row, col)\\\">\\n                            <adf-location-cell\\n                                [data]=\\\"data\\\"\\n                                [column]=\\\"col\\\"\\n                                [row]=\\\"row\\\"\\n                                [tooltip]=\\\"getCellTooltip(row, col)\\\">\\n                            </adf-location-cell>\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'fileSize'\\\" class=\\\"cell-value\\\"\\n                            [attr.data-automation-id]=\\\"'fileSize_' + data.getValue(row, col)\\\">\\n                            <adf-filesize-cell\\n                                [data]=\\\"data\\\"\\n                                [column]=\\\"col\\\"\\n                                [row]=\\\"row\\\"\\n                                [tooltip]=\\\"getCellTooltip(row, col)\\\">\\n                            </adf-filesize-cell>\\n                        </div>\\n                        <div *ngSwitchCase=\\\"'text'\\\" class=\\\"cell-value\\\"\\n                            [attr.data-automation-id]=\\\"'text_' + data.getValue(row, col)\\\">\\n                            <adf-datatable-cell\\n                                [data]=\\\"data\\\"\\n                                [column]=\\\"col\\\"\\n                                [row]=\\\"row\\\"\\n                                [tooltip]=\\\"getCellTooltip(row, col)\\\">\\n                            </adf-datatable-cell>\\n                        </div>\\n                    <span *ngSwitchDefault class=\\\"cell-value\\\">\\n                    <!-- empty cell for unknown column type -->\\n                    </span>\\n                    </ng-container>\\n                </div>\\n                <div *ngIf=\\\"col.template\\\" class=\\\"cell-container\\\">\\n                    <ng-container\\n                        [ngTemplateOutlet]=\\\"col.template\\\"\\n                        [ngOutletContext]=\\\"{ $implicit: { data: data, row: row, col: col }, value: data.getValue(row, col) }\\\">\\n                    </ng-container>\\n                </div>\\n            </td>\\n\\n            <!-- Actions (right) -->\\n            <td *ngIf=\\\"actions && actionsPosition === 'right'\\\" class=\\\"alfresco-datatable__actions-cell\\\">\\n                <button md-icon-button [mdMenuTriggerFor]=\\\"menu\\\"\\n                    [attr.data-automation-id]=\\\"'action_menu_' + idx\\\">\\n                    <md-icon>more_vert</md-icon>\\n                </button>\\n                <md-menu #menu=\\\"mdMenu\\\">\\n                    <button md-menu-item *ngFor=\\\"let action of getRowActions(row)\\\"\\n                        [attr.data-automation-id]=\\\"action.title\\\"\\n                        [disabled]=\\\"action.disabled\\\"\\n                        (click)=\\\"onExecuteRowAction(row, action)\\\">\\n                        <md-icon *ngIf=\\\"action.icon\\\">{{ action.icon }}</md-icon>\\n                        <span>{{ action.title }}</span>\\n                    </button>\\n                </md-menu>\\n            </td>\\n\\n        </tr>\\n        <tr *ngIf=\\\"data.getRows().length === 0\\\">\\n            <td class=\\\"adf-no-content-container\\\"\\n                [attr.colspan]=\\\"1 + data.getColumns().length\\\">\\n                <ng-template *ngIf=\\\"noContentTemplate\\\"\\n                             ngFor [ngForOf]=\\\"[data]\\\"\\n                             [ngForTemplate]=\\\"noContentTemplate\\\">\\n                </ng-template>\\n                <ng-content select=\\\"adf-empty-list\\\"></ng-content>\\n            </td>\\n        </tr>\\n    </ng-container>\\n    <tr *ngIf=\\\"loading\\\">\\n        <td class=\\\"adf-loading-content-container\\\"\\n            [attr.colspan]=\\\"1 + data.getColumns().length\\\">\\n            <ng-template *ngIf=\\\"loadingTemplate\\\"\\n                         ngFor [ngForOf]=\\\"[data]\\\"\\n                         [ngForTemplate]=\\\"loadingTemplate\\\">\\n            </ng-template>\\n        </td>\\n    </tr>\\n    </tbody>\\n</table>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/datatable/datatable.component.html\n// module id = 17\n// module chunks = 0","module.exports = \"<div class=\\\"adf-empty-list_template\\\">\\n    <ng-content select=\\\"[adf-empty-list-header]\\\"></ng-content>\\n    <ng-content select=\\\"[adf-empty-list-body]\\\"></ng-content>\\n    <ng-content select=\\\"[adf-empty-list-footer]\\\"></ng-content>\\n    <ng-content></ng-content>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/datatable/empty-list.component.html\n// module id = 18\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader/lib/loader.js!./src/components/datatable/datatable.component.scss\n// module id = 19\n// module chunks = 0","module.exports = \".adf-empty-list_template {\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader/lib/loader.js!./src/components/datatable/empty-list.component.scss\n// module id = 20\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./datatable.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/datatable/datatable.component.scss\n// module id = 21\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./empty-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/datatable/empty-list.component.scss\n// module id = 22\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 23\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material\"\n// module id = 24\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Rx\"\n// module id = 25\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { MaterialModule } from './src/material.module';\n\nexport * from './src/data/index';\n\nexport { DataTableCellComponent } from './src/components/datatable/datatable-cell.component';\nexport { DataTableComponent } from './src/components/datatable/datatable.component';\nexport { EmptyListComponent } from './src/components/datatable/empty-list.component';\nexport { DataCellEvent, DataCellEventModel } from './src/components/datatable/data-cell.event';\nexport { DataRowActionEvent, DataRowActionModel } from './src/components/datatable/data-row-action.event';\n\nimport { DataTableCellComponent } from './src/components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './src/components/datatable/datatable.component';\nimport { DateCellComponent } from './src/components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './src/components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './src/components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './src/components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './src/directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './src/directives/no-content-template.directive';\n\nexport function directives() {\n    return [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        NoContentTemplateDirective,\n        LoadingContentTemplateDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        RouterModule,\n        CoreModule,\n        MaterialModule\n    ],\n    declarations: directives(),\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-datatable',\n                source: 'assets/ng2-alfresco-datatable'\n            }\n        }\n    ],\n    exports: [\n        ...directives(),\n        MaterialModule,\n        RouterModule\n    ]\n})\nexport class DataTableModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./index.ts"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChEA;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AAYA;AAAA;AA2BA;AAVA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAtBA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAfA;AAVA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AA2BA;;AAAA;AA3BA;;;;;;;;;AC9BA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAOA;AA2EA;AAAA;AAAA;AAnEA;AAGA;AAGA;AAGA;AAGA;AAMA;AAGA;AAMA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAKA;AACA;AAKA;AAGA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1bA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAxDA;AALA;AACA;AACA;AACA;AACA;AA4EA;AA3EA;AA6bA;;AAAA;AA7bA;;;;;;;;;AClCA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;AAGA;AAkCA;AACA;AACA;AACA;AACA;AACA;AAAA;AALA;AAOA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;AAXA;;;;;;;;;AC3DA;;;;;;;;;;;;;;;AAeA;;;;;;;;AAEA;AAOA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AC5BA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;AAEA;AAGA;AAAA;AAEA;AAAA;AAEA;;AACA;AAEA;AAAA;AAPA;AASA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAZA;;;;;;;;;AC7BA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;AAEA;AAGA;AAAA;AAOA;AAAA;AAEA;;AACA;AAPA;AAAA;AACA;AACA;;;AAAA;AAOA;AAAA;AAZA;AAcA;AAKA;AACA;AACA;AACA;AACA;AAAA;AATA;;;;;;;;;AClCA;;;;;;;;;;;;;;;AAeA;;AAEA;AAGA;AACA;AAGA;AA+BA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AA5CA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAyBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAtJA;AAyJA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAhBA;AAmBA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AArBA;;;;;;;;;ACpMA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;AAEA;AACA;AAaA;AAAA;AAAA;;AAAA;AAAA;AAXA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;AC/BA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;AAEA;AACA;AAaA;AAAA;AAAA;;AAAA;AAAA;AAXA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;AC/BA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AAeA;AAAA;AAbA;AAAA;AAmBA;;AAmBA;AAhBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AArBA;AADA;;AACA;AAGA;AADA;;AACA;AANA;AAbA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAyBA;AAAA;AAzBA;;;;;;;;;AClCA;;;;;;;;;;;;;;;AAeA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;AClBA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AAKA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AATA;AADA;;AACA;AAHA;AAHA;AACA;AACA;AAMA;AALA;AAcA;;AAAA;AAdA;;;;;;;;;ACvBA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AAKA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AATA;AADA;;AACA;AAHA;AAHA;AACA;AACA;AAMA;AALA;AAaA;;AAAA;AAbA;;;;;;;;;ACvBA;;;;;;;;;;;;;;;AAeA;;;;;;;;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;AAAA;AAAA;AAAA;AAJA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;ACxCA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;;;;;;ACAA;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAuCA;AAAA;AAAA;AAAA;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;","sourceRoot":""}