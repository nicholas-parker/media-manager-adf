{"version":3,"file":"./bundles/ng2-alfresco-search.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7b5b025ecab19576d5b8","webpack:///external \"ng2-alfresco-core\"","webpack:///./src/components/search-autocomplete.component.ts","webpack:///./src/components/search-control.component.ts","webpack:///./src/components/search.component.ts","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/animations\"","webpack:///external \"ng2-alfresco-documentlist\"","webpack:///./src/assets/images/empty_doc_lib.svg","webpack:///./src/forms/search-term-validator.ts","webpack:///./src/components/search-autocomplete.component.html","webpack:///./src/components/search-control.component.html","webpack:///./src/components/search.component.html","webpack:///./src/components/search-autocomplete.component.scss","webpack:///./src/components/search-control.component.scss","webpack:///./src/components/search.component.scss","webpack:///./src/components/search-autocomplete.component.scss?4424","webpack:///./src/components/search-control.component.scss?8d3d","webpack:///./src/components/search.component.scss?794a","webpack:///external \"@angular/router\"","webpack:///external \"rxjs/Rx\"","webpack:///./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ng2-alfresco-core\"), require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/animations\"), require(\"ng2-alfresco-documentlist\"), require(\"@angular/router\"), require(\"rxjs/Rx\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ng2-alfresco-core\", \"@angular/core\", \"@angular/forms\", \"@angular/animations\", \"ng2-alfresco-documentlist\", \"@angular/router\", \"rxjs/Rx\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-alfresco-search\"] = factory(require(\"ng2-alfresco-core\"), require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/animations\"), require(\"ng2-alfresco-documentlist\"), require(\"@angular/router\"), require(\"rxjs/Rx\"));\n\telse\n\t\troot[\"ng2-alfresco-search\"] = factory(root[\"ng2-alfresco-core\"], root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/animations\"], root[\"ng2-alfresco-documentlist\"], root[\"@angular/router\"], root[\"rxjs/Rx\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7b5b025ecab19576d5b8","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-core\"\n// module id = 0\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { SearchOptions, SearchService } from 'ng2-alfresco-core';\nimport { ThumbnailService } from 'ng2-alfresco-core';\n\n@Component({\n    selector: 'adf-search-autocomplete, alfresco-search-autocomplete',\n    template: require('./search-autocomplete.component.html'),\n    styles: [require('./search-autocomplete.component.scss')],\n    animations: [\n        trigger('transformAutocomplete', [\n            state('void', style({\n                opacity: 0,\n                transform: 'scale(0.01, 0.01)'\n            })),\n            state('enter-start', style({\n                opacity: 1,\n                transform: 'scale(1, 0.5)'\n            })),\n            state('enter', style({\n                transform: 'scale(1, 1)'\n            })),\n            transition('void => enter-start', animate('100ms linear')),\n            transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n            transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SearchAutocompleteComponent implements OnChanges {\n\n    @Input()\n    searchTerm: string = '';\n\n    results: any = null;\n\n    errorMessage: string = null;\n\n    @Input()\n    ngClass: any;\n\n    @Input()\n    maxResults: number = 5;\n\n    @Input()\n    resultSort: string = null;\n\n    @Input()\n    rootNodeId: string = '-root';\n\n    @Input()\n    resultType: string = null;\n\n    @Input()\n    highlight: boolean = false;\n\n    @Output()\n    fileSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    searchFocus: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @Output()\n    cancel = new EventEmitter();\n\n    @Output()\n    resultsLoad = new EventEmitter();\n\n    @Output()\n    scrollBack = new EventEmitter();\n\n    @ViewChild('resultsTableBody', {}) resultsTableBody: ElementRef;\n\n    panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\n\n    constructor(private searchService: SearchService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    ngOnChanges(changes) {\n        if (changes.searchTerm) {\n            this.results = null;\n            this.errorMessage = null;\n            this.displaySearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    /**\n     * Loads and displays search results\n     * @param searchTerm Search query entered by user\n     */\n    private displaySearchResults(searchTerm) {\n        let searchOpts: SearchOptions = {\n            include: ['path'],\n            rootNodeId: this.rootNodeId,\n            nodeType: this.resultType,\n            maxItems: this.maxResults,\n            orderBy: this.resultSort\n        };\n        if (searchTerm !== null && searchTerm !== '') {\n            searchTerm = searchTerm + '*';\n            this.searchService\n                .getNodeQueryResults(searchTerm, searchOpts)\n                .subscribe(\n                    results => {\n                        this.results = results.list.entries.slice(0, this.maxResults);\n\n                        if (results && results.list) {\n                            this.startAnimation();\n                        }\n\n                        this.errorMessage = null;\n                        this.resultsLoad.emit(this.results);\n                    },\n                    error => {\n                        this.results = null;\n                        this.errorMessage = <any> error;\n                        this.resultsLoad.error(error);\n                    }\n                );\n        }\n    }\n\n    /**\n     * Gets thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns {string} URL address.\n     */\n    getMimeTypeIcon(node: MinimalNodeEntity): string {\n        let mimeType;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    focusResult(): void {\n        let firstResult: any = this.resultsTableBody.nativeElement.querySelector('tr');\n        firstResult.focus();\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\n    onItemClick(node: MinimalNodeEntity): void {\n        if (node && node.entry) {\n            this.fileSelect.emit(node);\n        }\n    }\n\n    onRowFocus($event: FocusEvent): void {\n        this.searchFocus.emit($event);\n    }\n\n    onRowBlur($event: FocusEvent): void {\n        this.searchFocus.emit($event);\n    }\n\n    onRowEnter(node: MinimalNodeEntity): void {\n        if (node && node.entry) {\n            if (node.entry.isFile) {\n                this.fileSelect.emit(node);\n            }\n        }\n    }\n\n    onRowArrowDown($event: KeyboardEvent): void {\n        let nextElement: any = this.getNextElementSibling(<Element> $event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp($event: KeyboardEvent): void {\n        let previousElement: any = this.getPreviousElementSibling(<Element> $event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.scrollBack.emit($event);\n        }\n    }\n\n    onRowEscape($event: KeyboardEvent): void {\n        this.cancel.emit($event);\n    }\n\n    startAnimation() {\n        this.panelAnimationState = 'enter-start';\n    }\n\n    resetAnimation() {\n        this.panelAnimationState = 'void';\n    }\n\n    onAnimationDone(event: AnimationEvent) {\n        if (event.toState === 'enter-start') {\n            this.panelAnimationState = 'enter';\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/search-autocomplete.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { SearchTermValidator } from './../forms/search-term-validator';\nimport { SearchAutocompleteComponent } from './search-autocomplete.component';\n\n@Component({\n    selector: 'adf-search-control, alfresco-search-control',\n    template: require('./search-control.component.html'),\n    styles: [require('./search-control.component.scss')],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({transform: 'translateX(0%)'})),\n            state('inactive', style({transform: 'translateX(83%)'})),\n            state('no-animation', style({transform: 'translateX(0%)', width: '100%'})),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    @Input()\n    searchTerm = '';\n\n    @Input()\n    inputType = 'text';\n\n    @Input()\n    autocomplete: boolean = false;\n\n    @Input()\n    expandable: boolean = true;\n\n    @Input()\n    highlight: boolean = false;\n\n    @Output()\n    searchChange = new EventEmitter();\n\n    @Output()\n    searchSubmit = new EventEmitter();\n\n    @Output()\n    fileSelect = new EventEmitter();\n\n    searchControl: FormControl;\n\n    @ViewChild('searchInput', {})\n    searchInput: ElementRef;\n\n    @ViewChild(SearchAutocompleteComponent)\n    liveSearchComponent: SearchAutocompleteComponent;\n\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    liveSearchTerm: string = '';\n\n    @Input()\n    liveSearchRoot: string = '-root-';\n\n    @Input()\n    liveSearchResultType: string = null;\n\n    @Input()\n    liveSearchResultSort: string = null;\n\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    searchValid = false;\n\n    private focusSubject = new Subject<FocusEvent>();\n\n    private toggleSearch = new Subject<any>();\n\n    subscriptAnimationState: string;\n\n    constructor() {\n        this.searchControl = new FormControl(\n            this.searchTerm,\n            Validators.compose([Validators.required, SearchTermValidator.minAlphanumericChars(3)])\n        );\n\n        this.toggleSearch.asObservable().debounceTime(200).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                }\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n\n        this.searchControl.valueChanges.debounceTime(400).distinctUntilChanged()\n            .subscribe((value: string) => {\n                    this.onSearchTermChange(value);\n                }\n            );\n\n        this.setupFocusEventHandlers();\n    }\n\n    ngOnDestroy(): void {\n        this.focusSubject.unsubscribe();\n    }\n\n    private onSearchTermChange(value: string): void {\n        this.searchValid = this.searchControl.valid;\n        this.liveSearchTerm = this.searchValid ? value : '';\n        this.searchControl.setValue(value);\n        this.searchChange.emit({\n            value: value,\n            valid: this.searchValid\n        });\n    }\n\n    private setupFocusEventHandlers() {\n        let focusEvents: Observable<FocusEvent> = this.focusSubject.asObservable().debounceTime(50);\n\n        focusEvents.filter(($event: any) => {\n            return $event.type === 'focusout' || $event.type === 'blur';\n        }).subscribe(() => {\n            this.onSearchBlur();\n        });\n    }\n\n    getAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n\n    /**\n     * Method called on form submit, i.e. when the user has hit enter\n     *\n     * @param event Submit event that was fired\n     */\n    onSearch(): void {\n        this.searchControl.setValue(this.searchTerm);\n        if (this.searchControl.valid) {\n            this.searchSubmit.emit({\n                value: this.searchTerm\n            });\n            this.searchInput.nativeElement.blur();\n        }\n    }\n\n    hideAutocomplete(): void {\n        if (this.liveSearchComponent) {\n            this.liveSearchComponent.resetAnimation();\n        }\n    }\n\n    onFileClicked(event): void {\n        this.hideAutocomplete();\n        this.toggleSearchBar();\n        this.fileSelect.emit(event);\n        this.searchTerm = '';\n    }\n\n    onSearchBlur(): void {\n        this.hideAutocomplete();\n        this.toggleSearchBar();\n    }\n\n    onFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onBlur($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onEscape(): void {\n        this.hideAutocomplete();\n        this.toggleSearchBar();\n    }\n\n    onArrowDown(): void {\n        this.liveSearchComponent.focusResult();\n    }\n\n    onAutoCompleteFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onAutoCompleteReturn(): void {\n        if (this.searchInput) {\n            (<any> this.searchInput.nativeElement).focus();\n        }\n    }\n\n    onAutoCompleteCancel(): void {\n        if (this.searchInput) {\n            (<any> this.searchInput.nativeElement).focus();\n        }\n        this.hideAutocomplete();\n    }\n\n    toggleSearchBar() {\n        this.toggleSearch.next();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/search-control.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Optional, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { NodePaging, Pagination } from 'alfresco-js-api';\nimport { AlfrescoTranslationService, NotificationService, SearchOptions, SearchService } from 'ng2-alfresco-core';\nimport { PermissionModel } from 'ng2-alfresco-documentlist';\n\ndeclare var require: any;\n\n@Component({\n    selector: 'adf-search, alfresco-search',\n    styles: [require('./search.component.scss')],\n    template: require('./search.component.html'),\n    encapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent implements OnChanges, OnInit {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n\n    @Input()\n    searchTerm: string = '';\n\n    @Input()\n    maxResults: number = 20;\n\n    @Input()\n    resultSort: string = null;\n\n    @Input()\n    rootNodeId: string = '-root-';\n\n    @Input()\n    resultType: string = null;\n\n    @Input()\n    navigationMode: string = SearchComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    @Input()\n    navigate: boolean = true;\n\n    @Input()\n    emptyFolderImageUrl: string = require('../assets/images/empty_doc_lib.svg');\n\n    @Output()\n    resultsLoad = new EventEmitter();\n\n    @Output()\n    preview: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    nodeDbClick: EventEmitter<any> = new EventEmitter<any>();\n\n    pagination: Pagination;\n    errorMessage;\n    queryParamName = 'q';\n    skipCount: number = 0;\n    nodeResults: NodePaging;\n\n    constructor(private searchService: SearchService,\n                private translateService: AlfrescoTranslationService,\n                private notificationService: NotificationService,\n                @Optional() private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                this.searchTerm = params.hasOwnProperty(this.queryParamName) ? params[this.queryParamName] : null;\n                this.displaySearchResults(this.searchTerm);\n            });\n        } else {\n            this.displaySearchResults(this.searchTerm);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['searchTerm']) {\n            this.searchTerm = changes['searchTerm'].currentValue;\n            this.skipCount = 0;\n            this.displaySearchResults(this.searchTerm);\n        }\n    }\n\n    onDoubleClick($event: any) {\n        if (!this.navigate && $event.value) {\n            this.nodeDbClick.emit({ value: $event.value });\n        }\n    }\n\n    onPreviewFile(event: any) {\n        if (event.value) {\n            this.preview.emit({ value: event.value });\n        }\n    }\n\n    /**\n     * Loads and displays search results\n     * @param searchTerm Search query entered by user\n     */\n    private displaySearchResults(searchTerm) {\n        if (searchTerm && this.searchService) {\n            searchTerm = searchTerm + '*';\n            let searchOpts: SearchOptions = {\n                include: ['path', 'allowableOperations'],\n                skipCount: this.skipCount,\n                rootNodeId: this.rootNodeId,\n                nodeType: this.resultType,\n                maxItems: this.maxResults,\n                orderBy: this.resultSort\n            };\n            this.searchService\n                .getNodeQueryResults(searchTerm, searchOpts)\n                .subscribe(\n                    results => {\n                        this.nodeResults = results;\n                        this.pagination = results.list.pagination;\n                        this.resultsLoad.emit(results.list.entries);\n                        this.errorMessage = null;\n                    },\n                    error => {\n                        if (error.status !== 400) {\n                            this.errorMessage = <any> error;\n                            this.resultsLoad.error(error);\n                        }\n                    }\n                );\n        }\n    }\n\n    public onChangePageSize(event: Pagination): void {\n        this.maxResults = event.maxItems;\n        this.displaySearchResults(this.searchTerm);\n    }\n\n    public onNextPage(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.displaySearchResults(this.searchTerm);\n    }\n\n    public onPrevPage(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.displaySearchResults(this.searchTerm);\n    }\n\n    public onContentDelete(entry: any) {\n        this.displaySearchResults(this.searchTerm);\n    }\n\n    public handlePermission(permission: PermissionModel): void {\n        let permissionErrorMessage: any = this.translateService.get('PERMISSON.LACKOF', permission);\n        this.notificationService.openSnackMessage(permissionErrorMessage.value, 3000);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/search.component.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/animations\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-documentlist\"\n// module id = 7\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/empty_doc_lib.a89c064e4edfa54d2e347bf594947219.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/empty_doc_lib.svg\n// module id = 8\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nexport class SearchTermValidator {\n\n    static minAlphanumericChars(minChars: number) {\n        return (control: FormControl) => {\n            return ('' + control.value).replace(/[^0-9a-zA-Z]+/g, '').length >= minChars ? null : {\n                hasMinAlphanumericChars: false\n            };\n        };\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/forms/search-term-validator.ts","module.exports = \"<table class=\\\"full-width adf-search-result\\\"\\n       [@transformAutocomplete]=\\\"panelAnimationState\\\"\\n       (@transformAutocomplete.done)=\\\"onAnimationDone($event)\\\">\\n    <tbody id=\\\"adf-search-results\\\" #resultsTableBody data-automation-id=\\\"autocomplete_results\\\" *ngIf=\\\"results && results.length && searchTerm\\\">\\n    <tr id=\\\"result_row_{{idx}}\\\" *ngFor=\\\"let result of results; let idx = index\\\" tabindex=\\\"0\\\"\\n        (blur)=\\\"onRowBlur($event)\\\" (focus)=\\\"onRowFocus($event)\\\"\\n        (click)=\\\"onItemClick(result)\\\"\\n        (keyup.enter)=\\\"onRowEnter(result)\\\"\\n        (keyup.arrowdown)=\\\"onRowArrowDown($event)\\\"\\n        (keyup.arrowup)=\\\"onRowArrowUp($event)\\\"\\n        (keyup.escape)=\\\"onRowEscape($event)\\\"\\n        attr.data-automation-id=\\\"autocomplete_result_for_{{result.entry.name}}\\\">\\n        <td class=\\\"img-td\\\"><img src=\\\"{{getMimeTypeIcon(result)}}\\\" alt=\\\"{{result.entry.name}}\\\"/></td>\\n        <td>\\n            <div id=\\\"result_name_{{idx}}\\\" *ngIf=\\\"highlight; else elseBlock\\\" class=\\\"truncate\\\"\\n                 [innerHtml]=\\\"result.entry.name | highlight: searchTerm\\\"></div>\\n            <ng-template #elseBlock>\\n                <div id=\\\"result_name_{{idx}}\\\" class=\\\"truncate\\\" [innerHtml]=\\\"result.entry.name\\\"></div>\\n            </ng-template>\\n            <div id=\\\"result_user_{{idx}}\\\" class=\\\"truncate\\\">{{result.entry.createdByUser.displayName}}</div>\\n        </td>\\n    </tr>\\n    </tbody>\\n\\n    <tbody id=\\\"search_no_result\\\" data-automation-id=\\\"search_no_result_found\\\" *ngIf=\\\"results && results.length === 0\\\">\\n    <tr>\\n        <td>\\n            <div class=\\\"truncate\\\"><b> {{ 'SEARCH.RESULTS.NONE' | translate:{searchTerm: searchTerm} }}</b></div>\\n        </td>\\n    </tr>\\n    </tbody>\\n\\n    <tbody data-automation-id=\\\"autocomplete_error_message\\\" *ngIf=\\\"errorMessage\\\">\\n    <tr>\\n        <td>{{ 'SEARCH.RESULTS.ERROR' | translate:{errorMessage: errorMessage} }}</td>\\n    </tr>\\n    </tbody>\\n</table>\\n\\n\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search-autocomplete.component.html\n// module id = 10\n// module chunks = 0","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSearch(f.value)\\\" class=\\\"adf-search-form\\\">\\n    <div class=\\\"adf-search-container\\\"\\n        [@transitionMessages]=\\\"subscriptAnimationState\\\">\\n        <a md-icon-button\\n                *ngIf=\\\"expandable\\\"\\n                id=\\\"adf-search-button\\\"\\n            (click)=\\\"toggleSearchBar()\\\"\\n            class=\\\"adf-search-button\\\">\\n            <md-icon aria-label=\\\"search button\\\">search</md-icon>\\n        </a>\\n        <div class=\\\"adf-search-field\\\">\\n            <md-input-container>\\n                <input\\n                    mdInput\\n                    [type]=\\\"inputType\\\"\\n                    [autocomplete]=\\\"getAutoComplete()\\\"\\n                    data-automation-id=\\\"search_input\\\"\\n                    #searchInput\\n                    id=\\\"searchControl\\\"\\n                    [formControl]=\\\"searchControl\\\"\\n                    [(ngModel)]=\\\"searchTerm\\\"\\n                    (focus)=\\\"onFocus($event)\\\"\\n                    (blur)=\\\"onBlur($event)\\\"\\n                    (keyup.escape)=\\\"onEscape()\\\"\\n                    (keyup.arrowdown)=\\\"onArrowDown()\\\">\\n            </md-input-container>\\n        </div>\\n    </div>\\n</form>\\n<adf-search-autocomplete\\n    #autocomplete\\n    *ngIf=\\\"liveSearchEnabled\\\"\\n    [searchTerm]=\\\"liveSearchTerm\\\"\\n    [rootNodeId]=\\\"liveSearchRoot\\\"\\n    [resultType]=\\\"liveSearchResultType\\\"\\n    [resultSort]=\\\"liveSearchResultSort\\\"\\n    [maxResults]=\\\"liveSearchMaxResults\\\"\\n    [highlight]=\\\"highlight\\\"\\n    (fileSelect)=\\\"onFileClicked($event)\\\"\\n    (searchFocus)=\\\"onAutoCompleteFocus($event)\\\"\\n    (scrollBack)=\\\"onAutoCompleteReturn($event)\\\"\\n    (cancel)=\\\"onAutoCompleteCancel($event)\\\">\\n</adf-search-autocomplete>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search-control.component.html\n// module id = 11\n// module chunks = 0","module.exports = \"<div data-automation-id=\\\"search_result_table\\\"\\n     class=\\\"adf-data-table full-width\\\">\\n    <p data-automation-id=\\\"search_error_message\\\" *ngIf=\\\"errorMessage\\\">{{ 'SEARCH.RESULTS.ERROR' | translate:{errorMessage: errorMessage} }}</p>\\n    <div class=\\\"container\\\">\\n        <adf-document-list\\n            [node]=\\\"nodeResults\\\"\\n            [contextMenuActions]=\\\"true\\\"\\n            [contentActions]=\\\"true\\\"\\n            [navigationMode]=\\\"navigationMode\\\"\\n            [navigate]=\\\"navigate\\\"\\n            [enablePagination]=\\\"false\\\"\\n            (nodeDblClick)=\\\"onDoubleClick($event)\\\"\\n            (preview)=\\\"onPreviewFile($event)\\\">\\n            <empty-folder-content>\\n                <ng-template>\\n                    <div class=\\\"empty_template\\\">\\n                        <div class=\\\"no-result-message\\\">{{ 'SEARCH.RESULTS.NONE' | translate:{searchTerm: searchTerm} }}</div>\\n                        <img [src]=\\\"emptyFolderImageUrl\\\" class=\\\"no-result__empty_doc_lib\\\">\\n                    </div>\\n                </ng-template>\\n            </empty-folder-content>\\n            <data-columns>\\n                <data-column key=\\\"$thumbnail\\\" type=\\\"image\\\"></data-column>\\n                <data-column\\n                    title=\\\"{{'SEARCH.DOCUMENT_LIST.COLUMNS.DISPLAY_NAME' | translate}}\\\"\\n                    key=\\\"name\\\"\\n                    sortable=\\\"true\\\"\\n                    class=\\\"full-width ellipsis-cell\\\">\\n                </data-column>\\n                <data-column\\n                    title=\\\"{{'SEARCH.DOCUMENT_LIST.COLUMNS.CREATED_BY' | translate}}\\\"\\n                    key=\\\"createdByUser.displayName\\\"\\n                    sortable=\\\"true\\\"\\n                    class=\\\"desktop-only\\\">\\n                </data-column>\\n                <data-column\\n                    title=\\\"{{'SEARCH.DOCUMENT_LIST.COLUMNS.CREATED_ON' | translate}}\\\"\\n                    key=\\\"createdAt\\\"\\n                    type=\\\"date\\\"\\n                    format=\\\"medium\\\"\\n                    sortable=\\\"true\\\"\\n                    class=\\\"desktop-only\\\">\\n                </data-column>\\n            </data-columns>\\n\\n            <content-actions>\\n                <!-- folder actions -->\\n                <content-action\\n                    target=\\\"folder\\\"\\n                    title=\\\"{{'SEARCH.DOCUMENT_LIST.ACTIONS.FOLDER.DELETE' | translate}}\\\"\\n                    permission=\\\"delete\\\"\\n                    handler=\\\"delete\\\"\\n                    (permissionEvent)=\\\"handlePermission($event)\\\">\\n                </content-action>\\n                <!-- document actions -->\\n                <content-action\\n                    target=\\\"document\\\"\\n                    title=\\\"{{'SEARCH.DOCUMENT_LIST.ACTIONS.DOCUMENT.DOWNLOAD' | translate}}\\\"\\n                    handler=\\\"download\\\">\\n                </content-action>\\n                <content-action\\n                    target=\\\"document\\\"\\n                    title=\\\"{{'SEARCH.DOCUMENT_LIST.ACTIONS.DOCUMENT.DELETE' | translate}}\\\"\\n                    permission=\\\"delete\\\"\\n                    handler=\\\"delete\\\"\\n                    (execute)=\\\"onContentDelete($event)\\\"\\n                    (permissionEvent)=\\\"handlePermission($event)\\\">\\n                </content-action>\\n            </content-actions>\\n        </adf-document-list>\\n\\n        <adf-pagination\\n            (changePageSize)=\\\"onChangePageSize($event)\\\"\\n            (nextPage)=\\\"onNextPage($event)\\\"\\n            (prevPage)=\\\"onPrevPage($event)\\\"\\n            [pagination]=\\\"pagination\\\"\\n            [maxItems]=\\\"maxResults\\\"\\n            [supportedPageSizes]=\\\"[5, 10, 15, 20]\\\">\\n        </adf-pagination>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search.component.html\n// module id = 12\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader/lib/loader.js!./src/components/search-autocomplete.component.scss\n// module id = 13\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader/lib/loader.js!./src/components/search-control.component.scss\n// module id = 14\n// module chunks = 0","module.exports = \":host .adf-data-table caption {\\n  margin: 0 0 16px 0;\\n  text-align: left; }\\n\\n:host .adf-data-table td {\\n  white-space: nowrap; }\\n\\n:host .adf-data-table td.col-mimetype-icon {\\n  width: 24px; }\\n\\n:host .col-display-name {\\n  min-width: 250px;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\n.no-result-message {\\n  height: 32px;\\n  opacity: 0.26;\\n  font-size: 24px;\\n  line-height: 1.33;\\n  letter-spacing: -1px;\\n  color: #000000; }\\n\\n.no-result__empty_doc_lib {\\n  width: 565px;\\n  height: 161px;\\n  object-fit: contain;\\n  margin-top: 17px; }\\n\\n.empty_template {\\n  text-align: center;\\n  margin-top: 20px;\\n  margin-bottom: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/sass-loader/lib/loader.js!./src/components/search.component.scss\n// module id = 15\n// module chunks = 0","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./search-autocomplete.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search-autocomplete.component.scss\n// module id = 16\n// module chunks = 0","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./search-control.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search-control.component.scss\n// module id = 17\n// module chunks = 0","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./search.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/search.component.scss\n// module id = 18\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/router\"\n// module id = 19\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Rx\"\n// module id = 20\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, SearchService, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { DocumentListModule } from 'ng2-alfresco-documentlist';\nimport { SearchAutocompleteComponent } from './src/components/search-autocomplete.component';\nimport { SearchControlComponent } from './src/components/search-control.component';\nimport { SearchComponent } from './src/components/search.component';\n\n// services\nexport { SearchOptions, SearchService } from 'ng2-alfresco-core';\nexport * from './src/components/search.component';\nexport * from './src/components/search-control.component';\nexport * from './src/components/search-autocomplete.component';\n\n// Old Deprecated export\nimport { SearchService as AlfrescoSearchService } from 'ng2-alfresco-core';\nimport { SearchAutocompleteComponent as AlfrescoSearchAutocompleteComponent } from './src/components/search-autocomplete.component';\nimport { SearchControlComponent as AlfrescoSearchControlComponent } from './src/components/search-control.component';\nimport { SearchComponent as AlfrescoSearchComponent } from './src/components/search.component';\nexport { SearchService as AlfrescoSearchService } from 'ng2-alfresco-core';\nexport { SearchComponent as AlfrescoSearchComponent } from './src/components/search.component';\nexport { SearchControlComponent as AlfrescoSearchControlComponent } from './src/components/search-control.component';\nexport { SearchAutocompleteComponent as AlfrescoSearchAutocompleteComponent } from './src/components/search-autocomplete.component';\n\nexport const ALFRESCO_SEARCH_DIRECTIVES: [any] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchAutocompleteComponent,\n\n    // Old Deprecated export\n    AlfrescoSearchComponent,\n    AlfrescoSearchControlComponent,\n    AlfrescoSearchAutocompleteComponent\n];\n\nexport const ALFRESCO_SEARCH_PROVIDERS: [any] = [\n    SearchService,\n\n    // Old Deprecated export\n    AlfrescoSearchService\n];\n\n@NgModule({\n    imports: [\n        DocumentListModule,\n        CoreModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES\n    ],\n    providers: [\n        ...ALFRESCO_SEARCH_PROVIDERS,\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-search',\n                source: 'assets/ng2-alfresco-search'\n            }\n        }\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES\n    ]\n})\nexport class SearchModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./index.ts"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChEA;;;;;;;;ACAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AA0BA;AA8CA;AAAA;AACA;AA5CA;AAEA;AAEA;AAMA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAIA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAhLA;AADA;;AACA;AAOA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAEA;AAAA;AAAA;AAAA;AA1CA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+CA;AA9CA;AAqLA;;AAAA;AArLA;;;;;;;;;AC/CA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAmBA;AA2DA;AAAA;AAxDA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAWA;AAEA;AAGA;AAGA;AAGA;AAGA;AAEA;AAEA;AAEA;AAKA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtLA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAKA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AAGA;AADA;;AACA;AAKA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAjDA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AA0LA;;AAAA;AA1LA;;;;;;;;;ACzCA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;AAEA;AACA;AAEA;AAWA;AA4CA;AAAA;AACA;AACA;AACA;AAzCA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAIA;AACA;AAOA;AAhDA;AAkDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAvIA;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;;AACA;AAGA;AADA;AACA;AAAA;AAGA;AADA;AACA;AAAA;AApCA;AANA;AACA;AACA;AACA;AACA;AACA;AAgDA;AAHA;AA5CA;AA0IA;;AAAA;AA1IA;;;;;;;AC/BA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;AAeA;;AAIA;AAAA;AAUA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAVA;;;;;;;ACnBA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AA2BA;AAAA;AAAA;AAAA;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;","sourceRoot":""}